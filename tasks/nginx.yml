
- name: Install nginx
  apt: name=nginx state=present
  when: not node_container_nginx_disabled|default(False)

- name: Generate DH parameters if they don't already exist
  command: openssl dhparam -out /etc/ssl/dhparam.pem 2048
  args:
    creates: /etc/ssl/dhparam.pem
  when: not node_container_nginx_disabled|default(False)

- name: Ensure certificate archive exists
  become: yes
  file:
    path: /etc/letsencrypt/archive/{{ node_container.webname }}
    state: directory
    mode: 0700
  when: node_container.certchain is defined and not node_container_nginx_disabled|default(False)

- name: Ensure certificate liveliness exists
  become: yes
  file:
    path: /etc/letsencrypt/live/{{ node_container.webname }}
    state: directory
    mode: 0700
  when: node_container.certchain is defined and not node_container_nginx_disabled|default(False)

- name: Copying certificates to server
  become: yes
  copy: src=private/tls/{{ node_container.canonical_name }}/{{ node_container.canonical_name }}-fullchain.pem
        dest=/etc/letsencrypt/archive/{{ node_container.canonical_name }}/fullchain.pem
        owner=root
        group=root
        directory_mode=0755
        mode=0444
        backup=yes
  when: node_container.certchain is defined and not node_container_nginx_disabled|default(False)

- name: Copying new keys to servers
  become: yes
  copy: src=private/tls/{{ node_container.canonical_name }}/{{ node_container.canonical_name }}.key
        dest=/etc/letsencrypt/archive/{{ node_container.canonical_name }}/privkey.pem
        owner=root
        group=root
        directory_mode=0750
        mode=0440
        backup=yes
  when: node_container.certchain is defined and not node_container_nginx_disabled|default(False)

- name: Ensure the link to newest certificate exists
  become: yes
  file: src={{ item.source }} path={{ item.dest }} state=link
  with_items:
    - source: /etc/letsencrypt/archive/{{ node_container.canonical_name }}/fullchain.pem
      dest: /etc/letsencrypt/live/{{ node_container.canonical_name }}/fullchain.pem
    - source: /etc/letsencrypt/archive/{{ node_container.canonical_name }}/privkey.pem
      dest: /etc/letsencrypt/live/{{ node_container.canonical_name }}/privkey.pem
  when: node_container.certchain is defined and not node_container_nginx_disabled|default(False)

- name: Set up nginx configuration
  template: src=nginx_site.j2
            dest=/etc/nginx/sites-available/{{node_container.name}}
  when: not node_container_nginx_disabled|default(False)

- name: Ensure ACME challenge directory exists
  file: path=/srv/letsencrypt/challenges
        state=directory
        owner=root
        group=root
  when: not node_container_nginx_disabled|default(False)

- name: Enable (symlink) nginx configuration
  file: force=yes state=link
        path=/etc/nginx/sites-enabled/{{node_container.name}}
        src=/etc/nginx/sites-available/{{node_container.name}}
  when: not node_container_nginx_disabled|default(False)

- name: Reload nginx
  service: name=nginx state=reloaded
  when: not node_container_nginx_disabled|default(False)
